openapi: "3.0.0"
info:
  version: "1.0"
  title: PetStore API
servers:
  - url: http://127.0.0.1:5000

paths:
  /pets:
    get:
      x-ipcgo-filterable:
        $ref: "#/components/schemas/Pet"
      summary: List all pets
      operationId: ListPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100
            format: int32
      responses:
        '200':
          description: A list of Pets
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultPaginated'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Pet'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: CreatePet
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Pet'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
            format: uuid
      summary: Info for a specific pet
      operationId: ShowPetById
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Pet'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      parameters:
      - name: id
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
          format: uuid
      summary: edit a specific pet
      operationId: UpdatePet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DefaultResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Pet'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      parameters:
      - name: id
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
          format: uuid
      summary: Delete a pet by ID
      operationId: DeletePet
      tags:
        - pets
      responses:
        '204':
          description: Pet deleted successfully
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '500':
          description: Internal server error
  /store/order:
    post:
      summary: Place an order for a pet
      operationId: PlaceOrder
      tags:
        - store
      requestBody:
        content:
          application/json: 
            schema: # Request body contents
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
            example: # sample object
              id: 10
              name: Bestelling
      responses:
        '200':
          description: succesfil operation
        '405':
          description: Invalid input
  /store/order/{orderId}:
    get:
      parameters:
      - name: orderId
        in: path
        required: true
        description: ID of order that needs to be fetched
        schema:
          type: integer
          format: int64
      summary: Find purchase order by ID
      operationId: GetOrderById
      tags:
        - store
      responses:
        '200':
          description: succesfil operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of order that needs to be deleted
          schema:
            type: integer
            format: int64
      operationId: DeleteOrder
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
        - tag
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          pattern: "^[a-z0-9]+$"
          minLength: 2
        tag:
          type: string
    DefaultPaginated:
      type: object
      properties:
        _meta:
          description: "MetaData contains metadata of the response, such as record\
            \ count, pagination and other additional information."
          type: object
          properties:
            traceId:
              type: string
            limit:
              type: integer
            total:
              type: integer
              format: int64
        errors:
          description: "Errors specifies a list of errors that occurred, can be filled\
            \ using error handlers."
          type: object
    DefaultResponse:
      type: object
      properties:
        _meta:
          description: "MetaData contains metadata of the response, such as record\
            \ count, pagination and other additional information."
          type: object
          properties:
            traceId:
              type: string
        errors:
          description: "Errors specifies a list of errors that occurred, can be filled\
            \ using error handlers."
          type: object
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

